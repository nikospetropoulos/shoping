# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  dockerRegistryServiceConnection: "72bdc578-f572-4411-9f1c-732ce58d4dba"
  imageRepository: "shoppingapi"
  containerRegistry: "nikostestacr.azurecr.io"
  dockerfilePath: "**/Dockerfile"
  tags: "$(Build.BuildId)"
  imagePullSecret: "acr-secret"
  vmImageName: "ubuntu-latest"

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push to image container registry 
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerFile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)/Shopping
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy Stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy Jobs
    pool:
      vmImage: $(vmImageName)
    environment: 'nikospetropoulosshoping'
    strategy: 
      runOnce:
        deploy:
          steps:
            - task: KubernetesManifest@0
              displayName: Create Imagepull Secret
              inputs:
                action: createSecret
                secretName: $(imagePullSecret)
                dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

            - task: KubernetesManifest@0
              displayName: Deply to Kubernetes Cluster
              inputs:
                action: deploy
                manifests: 
                  $(Pipeline.WorkSpace)/manifests/shoppingapi.yaml
                imagePullSecrets: 
                  $(imagePullSecret)
                containers: 
                  $(containerRegistry)/$(imageRepository)/$(tag)


